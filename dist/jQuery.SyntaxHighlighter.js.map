{"version":3,"sources":["jQuery.SyntaxHighlighter.js","C:/Users/owashi/Documents/Visual Studio/Projects/jQuery.SyntaxHighlighter/jQuery.SyntaxHighlighter.ts"],"names":["root","factory","module","exports","require","define","amd","jQuery","this","$","JQuerySyntaxHighlighter","JQuerySyntaxHighlighter.Highlighter","JQuerySyntaxHighlighter.Highlighter.constructor","JQuerySyntaxHighlighter.Highlighter.HighlightElement","JQuerySyntaxHighlighter.Highlighter.getClasses","highlight","brush","config","autoHighlight","fn","SyntaxHighlight"],"mappings":"CAAC,SAAUA,EAAMC,GACQ,gBAAVC,SAAgD,gBAAnBA,QAAOC,QAC3CF,EAAQG,QAAQ,WACS,kBAAXC,SAAyBA,OAAOC,IAC9CD,QAAQ,UAAWJ,GAEnBA,EAAQM,SAEdC,KAAM,SAAUC,GCNlB,GAAOC,IAAP,SAAOA,GAyBNA,GAAaA,GAAWA,WAwBpBC,QAxBSA,GAwBGA,EAAiBA,EAAeA,EAAuBA,GAE/DC,KAAKA,QAAUA,EACfA,KAAKA,MAAQA,EACbA,KAAKA,OAASA,EACdA,KAAKA,cAAkCA,QAAjBA,GAA6BA,EAAOA,EA6ClED,MAzCWA,GAAAA,UAAAA,iBAAPA,WAAAE,GAAAA,GAAAA,KAEQA,EAAUA,KAAKA,YACnBA,GAAQA,QAAQA,SAAWA,KAAKA,OAEhCA,EAAEA,KAAKA,EAASA,SAACA,EAAeA,GAAkBA,MAAAA,GAAKA,QAAQA,SAASA,KAEpEA,KAAKA,eACLA,kBAAkBA,UAAUA,KAAMA,KAAKA,QAAQA,KAK/CF,EAAAA,UAAAA,WAARA,WAAAG,GAAAA,GAAAA,KAEQA,IAwBJA,OAtBAA,GAAEA,KAAKA,KAAKA,OAAQA,SAACA,EAAcA,GAC/BA,GACIA,GADAA,EAAIA,EAAYA,QAAQA,EAKpBA,GAFCA,QAALA,EACoBA,kBAATA,GACkBA,EAAOA,EAAKA,SAGjCA,EAAOA,IAAMA,EAGJA,kBAALA,GACRA,EAAEA,GAGFA,EAAIA,IAAMA,EAGlBA,EAAQA,KAAKA,KAGVA,GAtEIH,EAAAA,SACXA,UAAWA,aACXA,UAAWA,aACXA,SAAUA,WACVA,UAAWA,aACXA,OAAQA,SACRA,UAAWA,SAACA,GAA4BA,MAAAA,cAAgBA,EAAMA,KAAKA,KAAOA,KAC1EA,WAAYA,cACZA,MAAOA,QACPA,eAAgBA,mBAChBA,UAAWA,aACXA,UAAWA,aACXA,QAASA,WACTA,MAAOA,QACPA,QAASA,WA0DjBA,IA1EaD,GAAAA,YAAAA,EA4EZA,SAAUA,GAEP,QAASK,GAAUC,EAAeC,EAAuBC,GAErDH,MAAOA,MAAKA,KAAKA,SAACA,EAAeA,GAE7BA,GAAIA,GAAcA,GAAIA,GAAYA,EAAEA,GAAUA,EAAOA,EAAQA,EAC7DA,GAAYA,qBAMpBN,EAAEU,GAAGC,gBAAkBL,GAExBL,IApHGA,IAAAA","file":"jQuery.SyntaxHighlighter.js","sourcesContent":[null,"/// <reference path=\"typings/jquery/jquery.d.ts\"/>\r\n\r\nmodule JQuerySyntaxHighlighter {\r\n\t\r\n\tinterface sh {\r\n\t    highlight(params: any, element: HTMLElement);\r\n\t}\r\n\t\r\n\tdeclare var SyntaxHighlighter: sh;\r\n\t\r\n\texport interface Configuration {\r\n\t    autoLinks:\tboolean;\r\n\t    className:\tstring;\r\n\t    collapse:\tboolean;\r\n\t    firstLine:\tnumber;\r\n\t    gutter:\t\tboolean;\r\n\t    highlight:\tnumber[];\r\n\t    htmlScript:\tboolean;\r\n\t    light:\t\tboolean;\r\n\t    padLineNumbers:\tboolean | number;\r\n\t    quickCode:\tboolean;\r\n\t    smartTabs:\tboolean;\r\n\t    tabSize:\tnumber;\r\n\t    title:\t\tstring;\r\n\t    toolbar:\tboolean;\r\n\t}\r\n\t\r\n\texport class Highlighter {\r\n\t    \r\n\t    private static options = {\r\n\t        autoLinks: \"auto-links\",\r\n\t        className: \"class-name\",\r\n\t        collapse: \"collapse\",\r\n\t        firstLine: \"first-line\",\r\n\t        gutter: \"gutter\",\r\n\t        highlight: (value: number[]): string => \"highlight:[\" + value.join(\",\") + \"]\",\r\n\t        htmlScript: \"html-script\",\r\n\t        light: \"light\",\r\n\t        padLineNumbers: \"pad-line-numbers\",\r\n\t        quickCode: \"quick-code\",\r\n\t        smartTabs: \"smart-tabs\",\r\n\t        tabSize: \"tab-size\",\r\n\t        title: \"title\",\r\n\t        toolbar: \"toolbar\"\r\n\t    };\r\n\t    \r\n\t    private element: JQuery;\r\n\t    private brush: string;\r\n\t    private config: Configuration;\r\n\t    private autoHighlight: boolean;\r\n\t    \r\n\t    constructor(element: JQuery, brush: string, config: Configuration, autoHighlight: boolean) {\r\n\t        \r\n\t        this.element = element;\r\n\t        this.brush = brush;\r\n\t        this.config = config;\r\n\t        this.autoHighlight = (autoHighlight == undefined ? true : autoHighlight);\r\n\t        \r\n\t    }\r\n\t    \r\n\t    public HighlightElement(): void {\r\n\t        \r\n\t        var classes = this.getClasses();\r\n\t        classes.unshift(\"brush:\" + this.brush);\r\n\t        \r\n\t        $.each(classes, (index: number, value: string) => this.element.addClass(value));\r\n\t        \r\n\t        if (this.autoHighlight) {\r\n\t            SyntaxHighlighter.highlight(null, this.element[0]);\r\n\t        }\r\n\t        \r\n\t    }\r\n\t    \r\n\t    private getClasses(): string[] {\r\n\t        \r\n\t        var classes: string[] = [];\r\n\t        \r\n\t        $.each(this.config, (name: string, value: string | ((JQuery) => string)) => {\r\n\t            var x = Highlighter.options[name];\r\n\t            var c: string;\r\n\t            \r\n\t            if (x == undefined) {\r\n\t                if (typeof value == \"function\") {\r\n\t                    c = (<(JQuery) => string>value)(this.element);\r\n\t                }\r\n\t                else {\r\n\t                    c = name + \":\" + value;\r\n\t                }\r\n\t            }\r\n\t            else if (typeof x == \"function\") {\r\n\t                c = x(value);\r\n\t            }\r\n\t            else {\r\n\t                c = x + \":\" + value;\r\n\t            }\r\n\t            \r\n\t            classes.push(c);\r\n\t        });\r\n\t        \r\n\t        return classes;\r\n\t    }\r\n\t}\r\n\t\r\n\t(function ($: JQueryStatic) {\r\n\t   \r\n\t    function highlight(brush: string, config: Configuration, autoHighlight: boolean): any {\r\n\t        \r\n\t        return this.each((index: number, element: Element) => {\r\n\t            \r\n\t            var highlighter = new Highlighter($(element), brush, config, autoHighlight);\r\n\t            highlighter.HighlightElement();\r\n\t            \r\n\t        });\r\n\t        \r\n\t    };\r\n\t    \r\n\t    $.fn.SyntaxHighlight = highlight;\r\n\r\n\t})($);\r\n\r\n}\r\n"],"sourceRoot":"/source/"}